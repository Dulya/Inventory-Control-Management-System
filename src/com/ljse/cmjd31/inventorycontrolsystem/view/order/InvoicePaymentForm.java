/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.ljse.cmjd31.inventorycontrolsystem.view.order;

import com.ijse.cmjd31.inventorycontrolsystem.controller.CustomerController;
import com.ijse.cmjd31.inventorycontrolsystem.controller.InvoiceController;
import com.ijse.cmjd31.inventorycontrolsystem.controller.InvoiceDetailController;
import com.ijse.cmjd31.inventorycontrolsystem.model.Customer;
import com.ijse.cmjd31.inventorycontrolsystem.model.Invoice;
import com.ijse.cmjd31.inventorycontrolsystem.model.InvoiceDetails;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author 1
 */
public class InvoicePaymentForm extends javax.swing.JPanel {

    /**
     * Creates new form PaymentInvoice
     */
    private boolean b;
    private DefaultTableModel dtm;
    private DefaultTableModel dtm1;

    public InvoicePaymentForm() {
        initComponents();
        fillCustomerCombo();
        clearButton.setMnemonic('C');
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel6 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        customerCombo = new javax.swing.JComboBox();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        invoiceTable = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        invoiceDetailTable = new javax.swing.JTable();
        jPanel7 = new javax.swing.JPanel();
        dateText = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        customerText = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        totalAmountText = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        endDateCombo = new org.jdesktop.swingx.JXDatePicker();
        startDateCombo = new org.jdesktop.swingx.JXDatePicker();
        payButton = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        paymentText = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        cashText = new javax.swing.JTextField();
        jCheckBox1 = new javax.swing.JCheckBox();
        jLabel11 = new javax.swing.JLabel();
        balanceText = new javax.swing.JTextField();
        changeText = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        clearButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(1250, 566));

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setPreferredSize(new java.awt.Dimension(1250, 566));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Search Invoice By Customer", 0, 0, new java.awt.Font("Baskerville Old Face", 1, 18))); // NOI18N

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Customer");

        customerCombo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        customerCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        customerCombo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                customerComboMousePressed(evt);
            }
        });
        customerCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customerComboActionPerformed(evt);
            }
        });
        customerCombo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                customerComboFocusGained(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                .addComponent(customerCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(customerCombo))
                .addGap(12, 12, 12))
        );

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Select Invoice", 0, 0, new java.awt.Font("Baskerville Old Face", 1, 18))); // NOI18N

        invoiceTable.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        invoiceTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Invoice"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        invoiceTable.setSelectionBackground(new java.awt.Color(204, 204, 255));
        invoiceTable.setSelectionForeground(new java.awt.Color(0, 0, 0));
        invoiceTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                invoiceTableMousePressed(evt);
            }
        });
        invoiceTable.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                invoiceTableFocusGained(evt);
            }
        });
        invoiceTable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                invoiceTableKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(invoiceTable);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Invoice Details", 0, 0, new java.awt.Font("Baskerville Old Face", 1, 18))); // NOI18N

        invoiceDetailTable.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        invoiceDetailTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Invoice Id", "ItemCode", "Descrption", "sales Price", "Qty", "Amount"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        invoiceDetailTable.setSelectionBackground(new java.awt.Color(204, 204, 255));
        invoiceDetailTable.setSelectionForeground(new java.awt.Color(0, 0, 0));
        jScrollPane2.setViewportView(invoiceDetailTable);

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));

        dateText.setEditable(false);
        dateText.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setText("Date");

        customerText.setEditable(false);
        customerText.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setText("Total Amount");

        totalAmountText.setEditable(false);
        totalAmountText.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Customer");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(customerText, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE)
                    .addComponent(dateText, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(totalAmountText))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(dateText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(customerText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jLabel9))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(totalAmountText, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 726, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(54, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Search Invoice By Date", 0, 0, new java.awt.Font("Baskerville Old Face", 1, 18))); // NOI18N

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("To");

        endDateCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                endDateComboActionPerformed(evt);
            }
        });
        endDateCombo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                endDateComboFocusGained(evt);
            }
        });

        startDateCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startDateComboActionPerformed(evt);
            }
        });
        startDateCombo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                startDateComboFocusGained(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(startDateCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addGap(23, 23, 23)
                .addComponent(endDateCombo, javax.swing.GroupLayout.DEFAULT_SIZE, 114, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(startDateCombo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(endDateCombo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel5)))
                .addContainerGap())
        );

        payButton.setText("Pay");
        payButton.setEnabled(false);
        payButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payButtonActionPerformed(evt);
            }
        });

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));
        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", 0, 0, new java.awt.Font("Baskerville Old Face", 1, 18))); // NOI18N

        paymentText.setEditable(false);
        paymentText.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        paymentText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paymentTextActionPerformed(evt);
            }
        });
        paymentText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                paymentTextKeyReleased(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Baskerville Old Face", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 102));
        jLabel7.setText("Change");

        cashText.setEditable(false);
        cashText.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        cashText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cashTextActionPerformed(evt);
            }
        });
        cashText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cashTextKeyReleased(evt);
            }
        });

        jCheckBox1.setFont(new java.awt.Font("Baskerville Old Face", 1, 18)); // NOI18N
        jCheckBox1.setForeground(new java.awt.Color(0, 0, 102));
        jCheckBox1.setText("Cash");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Baskerville Old Face", 1, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 0, 102));
        jLabel11.setText("Payment");

        balanceText.setEditable(false);
        balanceText.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        balanceText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                balanceTextActionPerformed(evt);
            }
        });

        changeText.setEditable(false);
        changeText.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N

        jLabel12.setFont(new java.awt.Font("Baskerville Old Face", 1, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(0, 0, 102));
        jLabel12.setText("Due Amount");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jCheckBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(cashText, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(paymentText, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(46, 46, 46)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(changeText, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(balanceText, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(69, 69, 69))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cashText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBox1)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(balanceText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(paymentText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(changeText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );

        clearButton.setText("Clear");
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(0, 51, 102));

        jLabel13.setFont(new java.awt.Font("Baskerville Old Face", 1, 24)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("Invoice Payment Form");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 1045, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(166, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(clearButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(payButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 29, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(clearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11)
                        .addComponent(payButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(19, 19, 19))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, 542, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 24, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void customerComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customerComboActionPerformed
        try {
            Customer customer = (Customer) customerCombo.getSelectedItem();
            dtm = (DefaultTableModel) invoiceTable.getModel();
            dtm.setRowCount(0);
            dtm1 = (DefaultTableModel) invoiceDetailTable.getModel();
            dtm1.setRowCount(0);
            dateText.setText("");
            customerText.setText("");
            totalAmountText.setText("");
            cashText.setText("");
            balanceText.setText("");
            paymentText.setText("");
            changeText.setText("");
            try {
                List<Invoice> invoiceIdList = InvoiceController.getInvoiceByCustomer(customer.getCustId());
                for (Invoice invoice : invoiceIdList) {
                    Object[] rowData = {invoice};
                    dtm.addRow(rowData);
                }
                invoiceTable.requestFocus();
            } catch (ClassNotFoundException | SQLException ex) {
                Logger.getLogger(InvoicePaymentForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_customerComboActionPerformed

    private void invoiceTableFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_invoiceTableFocusGained
        //        cashText.setText("");
        //        paymentText.setText("");
        //        balanceText.setText("");
        //        changeText.setText("");
    }//GEN-LAST:event_invoiceTableFocusGained

    private void invoiceTableKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_invoiceTableKeyReleased
        //        if(evt.getKeyCode()== KeyEvent.VK_SPACE){
        //            viewButton.requestFocus();
        //            viewButton.doClick();
        //        }
        cashText.setEditable(true);
        paymentText.setEditable(true);
        if (evt.getKeyCode() == KeyEvent.VK_UP || evt.getKeyCode() == KeyEvent.VK_DOWN) {
            int row = invoiceTable.getSelectedRow();
            dtm1 = (DefaultTableModel) invoiceDetailTable.getModel();
            dtm1.setRowCount(0);
            Invoice invoice = (Invoice) invoiceTable.getValueAt(row, 0);
            List<InvoiceDetails> invoiceDetails;
            try {
                dateText.setText(invoice.getInv_date());
                Customer customer = CustomerController.getCustomerByCustId(invoice.getCustId());
                customerText.setText(customer.getCustId() + " - " + customer.getCustName());
                totalAmountText.setText(Double.toString(invoice.getTot_amount()));
                invoiceDetails = InvoiceDetailController.getInvoiceDetails(invoice.getInvoiceId());
                for (InvoiceDetails detail : invoiceDetails) {
                    Object[] tableRow = {detail.getInvoiceId(), detail.getItemCode(), detail.getDescription(), detail.getSalesPrice(), detail.getQty(), detail.getItemAmount()};
                    dtm1.addRow(tableRow);
                }
            } catch (SQLException ex) {
                Logger.getLogger(InvoicePaymentForm.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(InvoicePaymentForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        if (evt.getKeyCode() == KeyEvent.VK_SPACE) {
            int row = invoiceTable.getSelectedRow();
            dtm1 = (DefaultTableModel) invoiceDetailTable.getModel();
            dtm1.setRowCount(0);
            Invoice invoice = (Invoice) invoiceTable.getValueAt(row, 0);
            List<InvoiceDetails> invoiceDetails;
            try {
                dateText.setText(invoice.getInv_date());
                Customer customer = CustomerController.getCustomerByCustId(invoice.getCustId());
                customerText.setText(customer.getCustId() + " - " + customer.getCustName());
                totalAmountText.setText(Double.toString(invoice.getTot_amount()));
                invoiceDetails = InvoiceDetailController.getInvoiceDetails(invoice.getInvoiceId());
                for (InvoiceDetails detail : invoiceDetails) {
                    Object[] tableRow = {detail.getInvoiceId(), detail.getItemCode(), detail.getDescription(), detail.getSalesPrice(), detail.getQty(), detail.getItemAmount()};
                    dtm1.addRow(tableRow);
                    cashText.requestFocus();
                    balanceText.setText(Double.toString(invoice.getBalance()));
                }
            } catch (SQLException ex) {
                Logger.getLogger(InvoicePaymentForm.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(InvoicePaymentForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_invoiceTableKeyReleased

    private void endDateComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_endDateComboActionPerformed
        Date date = endDateCombo.getDate();
        Date date1 = startDateCombo.getDate();
        String endDate = new SimpleDateFormat("YY=MM-dd").format(date);
        String startDate = new SimpleDateFormat("YY-MM-dd").format(date1);
        List<Invoice> invoiceList;
        try {
            invoiceList = InvoiceController.getInvoiceByDateRange(startDate, endDate);
            dtm = (DefaultTableModel) invoiceTable.getModel();
            dtm.setRowCount(0);
            for (Invoice invoice : invoiceList) {
                Object[] row = {invoice};
                dtm.addRow(row);
            }
            invoiceTable.requestFocus();
        } catch (SQLException ex) {
            Logger.getLogger(InvoicePaymentForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(InvoicePaymentForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_endDateComboActionPerformed

    private void startDateComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startDateComboActionPerformed
        jPanel3.setBackground(Color.lightGray);
        customerCombo.setSelectedIndex(0);
        jPanel2.setBackground(Color.WHITE);
        endDateCombo.setDate(null);
        Date date = startDateCombo.getDate();
        String d = new SimpleDateFormat("YY-MM-dd").format(date);
        List<Invoice> invoiceList;
        try {
            invoiceList = InvoiceController.getInvoiceByStartDate(d);
            dtm = (DefaultTableModel) invoiceTable.getModel();
            dtm.setRowCount(0);
            dtm1 = (DefaultTableModel) invoiceDetailTable.getModel();
            dtm1.setRowCount(0);
            dateText.setText("");
            customerText.setText("");
            totalAmountText.setText("");
            cashText.setText("");
            balanceText.setText("");
            paymentText.setText("");
            changeText.setText("");
            for (Invoice invoice : invoiceList) {
                Object[] row = {invoice};
                dtm.addRow(row);
            }
            invoiceTable.requestFocus();
        } catch (SQLException ex) {
            Logger.getLogger(InvoicePaymentForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(InvoicePaymentForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_startDateComboActionPerformed

    private void payButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payButtonActionPerformed
        double dueAmount = Double.parseDouble(balanceText.getText());
        int row = invoiceTable.getSelectedRow();
        Invoice invoice = (Invoice) invoiceTable.getValueAt(row, 0);
        int res;
        try {
            double payment = Double.parseDouble(paymentText.getText());
            double balance = dueAmount - payment;
            res = InvoiceController.updateBalance(balance, invoice.getInvoiceId());
            if (res > 0) {
                JOptionPane.showMessageDialog(null, "Paid Successfully");
                double cash = Double.parseDouble(cashText.getText());
                balanceText.setText(Double.toString(balance));
                double change = cash - payment;
                changeText.setText(Double.toString(change));
                payButton.setEnabled(false);
            }
        } catch (SQLException ex) {
            Logger.getLogger(InvoicePaymentForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(InvoicePaymentForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_payButtonActionPerformed

    private void paymentTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paymentTextActionPerformed
        double balance = Double.parseDouble(balanceText.getText());
        payButton.requestFocus();
        payButton.doClick();
    }//GEN-LAST:event_paymentTextActionPerformed

    private void cashTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cashTextActionPerformed

        paymentText.requestFocus();
    }//GEN-LAST:event_cashTextActionPerformed

    private void cashTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cashTextKeyReleased
        check();
        if (evt.getKeyCode() == KeyEvent.VK_UP || evt.getKeyCode() == KeyEvent.VK_DOWN) {
            invoiceTable.requestFocus();
        }
        String txt = cashText.getText();
        boolean res = txt.matches("[0-9]+[.]?[0-9]{0,2}");
        if (!res) {
            cashText.setText(txt.substring(0, txt.length() - 1));
        } else {
            cashText.setText(txt);
        }
    }//GEN-LAST:event_cashTextKeyReleased

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void balanceTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_balanceTextActionPerformed
    }//GEN-LAST:event_balanceTextActionPerformed

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        dtm = (DefaultTableModel) invoiceTable.getModel();
        dtm.setRowCount(0);
        dtm1 = (DefaultTableModel) invoiceDetailTable.getModel();
        dtm1.setRowCount(0);
        dateText.setText("");
        customerText.setText("");
        totalAmountText.setText("");
        cashText.setText("");
        paymentText.setText("");
        balanceText.setText("");
        changeText.setText("");
        payButton.setEnabled(false);
        jPanel2.setBackground(Color.WHITE);
        jPanel3.setBackground(Color.WHITE);
        startDateCombo.setDate(null);
        endDateCombo.setDate(null);
    }//GEN-LAST:event_clearButtonActionPerformed

    private void customerComboMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_customerComboMousePressed
        try {
            Customer customer = (Customer) customerCombo.getSelectedItem();
            dtm = (DefaultTableModel) invoiceTable.getModel();
            dtm.setRowCount(0);
            dtm1 = (DefaultTableModel) invoiceDetailTable.getModel();
            dtm1.setRowCount(0);
            dateText.setText("");
            customerText.setText("");
            totalAmountText.setText("");
            cashText.setText("");
            balanceText.setText("");
            paymentText.setText("");
            changeText.setText("");
            try {
                List<Invoice> invoiceIdList = InvoiceController.getInvoiceByCustomer(customer.getCustId());
                for (Invoice invoice : invoiceIdList) {
                    Object[] rowData = {invoice};
                    dtm.addRow(rowData);
                }
                invoiceTable.requestFocus();
            } catch (ClassNotFoundException | SQLException ex) {
                Logger.getLogger(InvoicePaymentForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_customerComboMousePressed

    private void invoiceTableMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_invoiceTableMousePressed
        cashText.setEditable(true);
        paymentText.setEditable(true);
        int row = invoiceTable.getSelectedRow();
        changeText.setText("");
        paymentText.setText("");
        cashText.setText("");
        dtm1 = (DefaultTableModel) invoiceDetailTable.getModel();
        dtm1.setRowCount(0);
        Invoice invoice = (Invoice) invoiceTable.getValueAt(row, 0);
        List<InvoiceDetails> invoiceDetails;
        dateText.setText(invoice.getInv_date());
        Customer customer;
        try {
            customer = CustomerController.getCustomerByCustId(invoice.getCustId());
            customerText.setText(customer.getCustId() + " - " + customer.getCustName());
            totalAmountText.setText(Double.toString(invoice.getTot_amount()));
        } catch (SQLException ex) {
            Logger.getLogger(InvoicePaymentForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(InvoicePaymentForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            invoiceDetails = InvoiceDetailController.getInvoiceDetails(invoice.getInvoiceId());
            for (InvoiceDetails detail : invoiceDetails) {
                Object[] tableRow = {detail.getInvoiceId(), detail.getItemCode(), detail.getDescription(), detail.getSalesPrice(), detail.getQty(), detail.getItemAmount()};
                dtm1.addRow(tableRow);
                cashText.requestFocus();
                balanceText.setText(Double.toString(invoice.getBalance()));
            }
        } catch (SQLException ex) {
            Logger.getLogger(InvoicePaymentForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(InvoicePaymentForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_invoiceTableMousePressed

    private void paymentTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_paymentTextKeyReleased
        check();
        String txt = paymentText.getText();
        boolean res = txt.matches("[0-9]+[.]?[0-9]{0,2}");
        if (!res) {
            paymentText.setText(txt.substring(0, txt.length() - 1));
        } else {
            paymentText.setText(txt);
        }
    }//GEN-LAST:event_paymentTextKeyReleased

    private void customerComboFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_customerComboFocusGained
        startDateCombo.setDate(null);
        endDateCombo.setDate(null);
        jPanel2.setBackground(Color.lightGray);
        jPanel3.setBackground(Color.WHITE);
        dtm = (DefaultTableModel) invoiceTable.getModel();
        dtm.setRowCount(0);
    }//GEN-LAST:event_customerComboFocusGained

    private void startDateComboFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_startDateComboFocusGained
    }//GEN-LAST:event_startDateComboFocusGained

    private void endDateComboFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_endDateComboFocusGained
        jPanel2.setBackground(Color.WHITE);
    }//GEN-LAST:event_endDateComboFocusGained
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField balanceText;
    private javax.swing.JTextField cashText;
    private javax.swing.JTextField changeText;
    private javax.swing.JButton clearButton;
    private javax.swing.JComboBox customerCombo;
    private javax.swing.JTextField customerText;
    private javax.swing.JTextField dateText;
    private org.jdesktop.swingx.JXDatePicker endDateCombo;
    private javax.swing.JTable invoiceDetailTable;
    private javax.swing.JTable invoiceTable;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton payButton;
    private javax.swing.JTextField paymentText;
    private org.jdesktop.swingx.JXDatePicker startDateCombo;
    private javax.swing.JTextField totalAmountText;
    // End of variables declaration//GEN-END:variables

    private void fillCustomerCombo() {
        List<Customer> customerList;
        try {
            customerList = CustomerController.getAllCustomers();
            b = false;
            customerCombo.removeAllItems();
            customerCombo.addItem("<select a Customer>");
            for (Customer customer : customerList) {
                customerCombo.addItem(customer);
            }
            b = true;
        } catch (SQLException ex) {
            Logger.getLogger(CustomerOrderForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(CustomerOrderForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void check() {
        boolean b = cashText.getText().isEmpty() || paymentText.getText().isEmpty();
        if (b == false) {
            payButton.setEnabled(true);
        }
    }
}
