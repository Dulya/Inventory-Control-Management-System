/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.ljse.cmjd31.inventorycontrolsystem.view.order;

import com.ijse.cmjd31.inventorycontrolsystem.controller.BookController;
import com.ijse.cmjd31.inventorycontrolsystem.controller.DiscardController;
import com.ijse.cmjd31.inventorycontrolsystem.controller.ItemController;
import com.ijse.cmjd31.inventorycontrolsystem.controller.SalesReturnController;
import com.ijse.cmjd31.inventorycontrolsystem.model.Book_Item;
import com.ijse.cmjd31.inventorycontrolsystem.model.DiscardItem;
import com.ijse.cmjd31.inventorycontrolsystem.model.Invoice;
import com.ijse.cmjd31.inventorycontrolsystem.model.Item;
import com.ijse.cmjd31.inventorycontrolsystem.model.SalesReturnDetail;
import com.ijse.cmjd31.inventorycontrolsystem.other.IdGenerator;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author 1
 */
public class ReturnForm extends javax.swing.JDialog {

    /**
     * Creates new form NewJDialog
     */
    private boolean b;
    String date;
    Invoice invoice;
    Item item;
    int returnQty;
    UpdateInvoiceForm frame;

    public ReturnForm(java.awt.Frame parent, boolean modal, Item item, Invoice invoice, String date, UpdateInvoiceForm frame, int qty) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        setLocationRelativeTo(null);
        this.date = date;
        this.invoice = invoice;
        this.frame = frame;
        this.returnQty = qty;
        try {
            fillItemCombo();
            String nextId = IdGenerator.getNextId("SalesReturnDetail", "salesReturn_idSalesReturn", "SR");
            idText.setText(nextId);
        } catch (SQLException ex) {
            Logger.getLogger(ReturnForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ReturnForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        qtyText = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        amountText = new javax.swing.JTextField();
        idText = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        itemCombo = new javax.swing.JComboBox();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(0, 51, 102));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51), 3));

        qtyText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                qtyTextActionPerformed(evt);
            }
        });
        qtyText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                qtyTextKeyReleased(evt);
            }
        });

        jButton2.setText("Discard");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton1.setText("Return");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Return Qty");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Item Code");

        amountText.setEditable(false);

        idText.setEditable(false);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Sales Return Id");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Return Amount");

        itemCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jButton3.setText("Cancel");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(76, 76, 76)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(amountText, javax.swing.GroupLayout.DEFAULT_SIZE, 152, Short.MAX_VALUE)
                            .addComponent(idText)
                            .addComponent(qtyText)
                            .addComponent(itemCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(159, 159, 159)
                        .addComponent(jButton1)
                        .addGap(14, 14, 14)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton3)))
                .addContainerGap(14, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(idText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(22, 22, 22)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(itemCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(qtyText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(amountText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel3))
                .addGap(39, 39, 39)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void qtyTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_qtyTextActionPerformed
        Object ob = itemCombo.getSelectedItem();
        if (ob instanceof Book_Item) {
            Book_Item bookItem = (Book_Item) itemCombo.getSelectedItem();
            Item item;
            try {
                item = ItemController.getItemByItemCode(bookItem.getItemCode());
                double price = item.getSalesPrice();
                int qty = Integer.parseInt(qtyText.getText());
                double amount = qty * price;
                amountText.setText(Double.toString(amount));
            } catch (SQLException ex) {
                Logger.getLogger(ReturnForm.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(ReturnForm.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else if (ob instanceof Item) {
            Item item = (Item) itemCombo.getSelectedItem();
            double price = item.getSalesPrice();
            int qty = Integer.parseInt(qtyText.getText());
            double amount = qty * price;
            amountText.setText(Double.toString(amount));
        }
    }//GEN-LAST:event_qtyTextActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if (b) {
            Object ob = itemCombo.getSelectedItem();
            if (ob instanceof Book_Item) {
                Book_Item bookItem = (Book_Item) itemCombo.getSelectedItem();
                Item item;
                try {
                    item = ItemController.getItemByItemCode(bookItem.getItemCode());
                    int qty = Integer.parseInt(qtyText.getText());
                    frame.updateQty(qty);
                    double amount = Double.parseDouble(amountText.getText());
                    SalesReturnDetail detail = new SalesReturnDetail(idText.getText(), date, invoice.getInvoiceId(), item.getItemCode(), qty, amount);
                    int res = SalesReturnController.addReturnDetail(detail);
                    DiscardItem discard = new DiscardItem(idText.getText(), item.getItemCode(), qty, date);
                    int res1 = DiscardController.addDiscardDetail(discard);
                    if (res > 0 && res1 > 0) {
                        JOptionPane.showMessageDialog(null, "Item discarded Successfuly!");
                        this.dispose();
                    } else {
                        JOptionPane.showMessageDialog(null, "Failed to discard Item");
                        this.dispose();
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(ReturnForm.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(ReturnForm.class.getName()).log(Level.SEVERE, null, ex);
                }

            } else if (ob instanceof Item) {
                Item item = (Item) itemCombo.getSelectedItem();
                int qty = Integer.parseInt(qtyText.getText());
                double amount = Double.parseDouble(amountText.getText());
                SalesReturnDetail detail = new SalesReturnDetail(idText.getText(), date, invoice.getInvoiceId(), item.getItemCode(), qty, amount);
                try {
                    int res = SalesReturnController.addReturnDetail(detail);
                    if (res > 0) {
                        JOptionPane.showMessageDialog(null, "Item returned Successfuly!");

                    }
                } catch (SQLException ex) {
                    Logger.getLogger(ReturnForm.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(ReturnForm.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (b) {
            Object ob = itemCombo.getSelectedItem();
            if (ob instanceof Book_Item) {
                Book_Item bookItem = (Book_Item) itemCombo.getSelectedItem();
                Item item;
                try {
                    item = ItemController.getItemByItemCode(bookItem.getItemCode());
                    int qty = Integer.parseInt(qtyText.getText());
                    frame.updateQty(qty);
                    double amount = Double.parseDouble(amountText.getText());
                    SalesReturnDetail detail = new SalesReturnDetail(idText.getText(), date, invoice.getInvoiceId(), item.getItemCode(), qty, amount);
                    int res = SalesReturnController.addReturnDetail(detail);
                    if (res > 0) {
                        JOptionPane.showMessageDialog(null, "Item returned Successfuly!");
                        this.dispose();
                    } else {
                        JOptionPane.showMessageDialog(null, "Failed to return Item!");
                        this.dispose();
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(ReturnForm.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(ReturnForm.class.getName()).log(Level.SEVERE, null, ex);
                }

            } else if (ob instanceof Item) {
                Item item = (Item) itemCombo.getSelectedItem();
                int qty = Integer.parseInt(qtyText.getText());
                double amount = Double.parseDouble(amountText.getText());
                SalesReturnDetail detail = new SalesReturnDetail(idText.getText(), date, invoice.getInvoiceId(), item.getItemCode(), qty, amount);
                try {
                    int res = SalesReturnController.addReturnDetail(detail);
                    if (res > 0) {
                        JOptionPane.showMessageDialog(null, "Item returned Successfuly!");
                        this.dispose();
                    } else {
                        JOptionPane.showMessageDialog(null, "Failed to return Item!");
                        this.dispose();
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(ReturnForm.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(ReturnForm.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void qtyTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_qtyTextKeyReleased

        String qty = qtyText.getText();
        if (!qty.isEmpty()) {
            boolean res = qty.matches("[0-9]+");
            if (res) {
                int q = Integer.parseInt(qtyText.getText());
                if (returnQty >= q && q != 0) {
                    qtyText.setText(qty);
                } else {
                    qty = qty.substring(0, qty.length() - 1);
                    qtyText.setText(qty);
                }
            } else {
                qty = qty.substring(0, qty.length() - 1);
                qtyText.setText(qty);
            }
        }
    }//GEN-LAST:event_qtyTextKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ReturnForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ReturnForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ReturnForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ReturnForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ReturnForm dialog = new ReturnForm(new javax.swing.JFrame(), true, new Item(), new Invoice(), new String(), new UpdateInvoiceForm(), new Integer(WIDTH));
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField amountText;
    private javax.swing.JTextField idText;
    private javax.swing.JComboBox itemCombo;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField qtyText;
    // End of variables declaration//GEN-END:variables

    private void fillItemCombo() throws SQLException, ClassNotFoundException {
        List<Book_Item> itemBookList = BookController.getAllItems();
        List<Item> itemList = ItemController.getAllItemsNotBooks();
        b = false;
        itemCombo.removeAllItems();
        for (Book_Item bookList : itemBookList) {
            itemCombo.addItem(bookList);
        }
        for (Item item : itemList) {
            itemCombo.addItem(item);
        }
        b = true;
    }
}
