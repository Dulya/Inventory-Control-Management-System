/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.ljse.cmjd31.inventorycontrolsystem.view.order;

import com.ijse.cmjd31.inventorycontrolsystem.controller.BookController;
import com.ijse.cmjd31.inventorycontrolsystem.controller.ItemController;
import com.ijse.cmjd31.inventorycontrolsystem.model.Book_Item;
import com.ijse.cmjd31.inventorycontrolsystem.model.Item;
import com.ijse.cmjd31.inventorycontrolsystem.model.PurchaseOrder;
import com.ijse.cmjd31.inventorycontrolsystem.other.IdGenerator;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author 1
 */
public class PurchaseReturnForm extends javax.swing.JDialog {

    /**
     * Creates new form NewJDialog
     */
    private boolean b;
    String date;
    PurchaseOrder purchaseOrder;
    Item item;
    int returnQty;
    ReturnPurchaseOrderForm frame;

    public PurchaseReturnForm(java.awt.Frame parent, boolean modal, Item item, PurchaseOrder purchaseOrder, String date, ReturnPurchaseOrderForm frame, int returnQty) {
        super(parent, modal);
        initComponents();
        this.date = date;
        this.purchaseOrder = purchaseOrder;
        this.frame = frame;
        this.returnQty = returnQty;
        qtyText.requestFocus();
        setLocationRelativeTo(null);
        try {
            fillItemCombo();
        } catch (SQLException ex) {
            Logger.getLogger(PurchaseReturnForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(PurchaseReturnForm.class.getName()).log(Level.SEVERE, null, ex);
        }

        for (int i = 0; i < itemCombo.getItemCount(); i++) {
            if (itemCombo.getItemAt(i).toString().startsWith(item.getItemCode())) {
                itemCombo.setSelectedIndex(i);
                break;
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        qtyText = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        itemCombo = new javax.swing.JComboBox();
        cancelButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(0, 51, 102));

        qtyText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                qtyTextActionPerformed(evt);
            }
        });
        qtyText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                qtyTextKeyReleased(evt);
            }
        });

        jButton1.setText("Return");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Return Qty");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Item Code");

        itemCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(76, 76, 76)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(qtyText)
                    .addComponent(itemCombo, 0, 152, Short.MAX_VALUE))
                .addContainerGap(52, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(itemCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(qtyText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(cancelButton))
                .addGap(22, 22, 22))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void qtyTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_qtyTextActionPerformed
        Object ob = itemCombo.getSelectedItem();
        if (ob instanceof Book_Item) {
            Book_Item bookItem = (Book_Item) itemCombo.getSelectedItem();
            Item item;
            try {
                item = ItemController.getItemByItemCode(bookItem.getItemCode());
                double price = item.getSalesPrice();
                int qty = Integer.parseInt(qtyText.getText());
                double amount = qty * price;
            } catch (SQLException ex) {
                Logger.getLogger(PurchaseReturnForm.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(PurchaseReturnForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else if (ob instanceof Item) {
            Item item = (Item) itemCombo.getSelectedItem();
            double price = item.getSalesPrice();
            int qty = Integer.parseInt(qtyText.getText());
            double amount = qty * price;
        }
    }//GEN-LAST:event_qtyTextActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (b) {
            Object ob = itemCombo.getSelectedItem();
            if (ob instanceof Book_Item) {
                Book_Item bookItem = (Book_Item) itemCombo.getSelectedItem();
                Item item;
                try {
                    item = ItemController.getItemByItemCode(bookItem.getItemCode());
                    int qty = Integer.parseInt(qtyText.getText());
                    frame.updateQty(qty);
                    this.dispose();
                    // PurchaseReturnDetail detail = new PurchaseReturnDetail(qty, amount,item.getCostPrice(),purchaseOrder.getpOrderId(), idText.getText());
                    // int res = PurchaseReturnController.addReturnDetail(detail);
                    //           if(res>0){
                    //               JOptionPane.showMessageDialog(null,"Item returned Successfuly!");
                    //               this.dispose();
                    //           }else{
                    //                    JOptionPane.showMessageDialog(null,"Failed to return Item!");
                    //                    this.dispose();
                    //                }
                } catch (SQLException ex) {
                    Logger.getLogger(PurchaseReturnForm.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(PurchaseReturnForm.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else if (ob instanceof Item) {
                Item item = (Item) itemCombo.getSelectedItem();
                int qty = Integer.parseInt(qtyText.getText());
                try {
                    frame.updateQty(qty);
                } catch (SQLException ex) {
                    Logger.getLogger(PurchaseReturnForm.class.getName()).log(Level.SEVERE, null, ex);
                }
                this.dispose();
                //
                //           PurchaseReturnDetail detail = new PurchaseReturnDetail(qty, amount,item.getCostPrice(),purchaseOrder.getpOrderId(), idText.getText());
                //            try {
                //                 int res = PurchaseReturnController.addReturnDetail(detail);
                //                if(res>0){
                //               JOptionPane.showMessageDialog(null,"Item returned Successfuly!");
                //               this.dispose();
                //           }else{
                //                    JOptionPane.showMessageDialog(null,"Failed to return Item!");
                //                    this.dispose();
                //                }
                //            } catch (SQLException ex) {
                //                Logger.getLogger(PurchaseReturn.class.getName()).log(Level.SEVERE, null, ex);
                //            } catch (ClassNotFoundException ex) {
                //                Logger.getLogger(PurchaseReturn.class.getName()).log(Level.SEVERE, null, ex);
                //            }
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void qtyTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_qtyTextKeyReleased
        String qty = qtyText.getText();
        if (!qty.isEmpty()) {
            boolean res = qty.matches("[0-9]+");
            if (res) {
                int q = Integer.parseInt(qtyText.getText());
                if (returnQty >= q && q != 0) {
                    qtyText.setText(qty);
                } else {
                    qty = qty.substring(0, qty.length() - 1);
                    qtyText.setText(qty);
                }
            } else {
                qty = qty.substring(0, qty.length() - 1);
                qtyText.setText(qty);
            }
        }
    }//GEN-LAST:event_qtyTextKeyReleased

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PurchaseReturnForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PurchaseReturnForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PurchaseReturnForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PurchaseReturnForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    PurchaseReturnForm dialog = new PurchaseReturnForm(new javax.swing.JFrame(), true, new Item(), new PurchaseOrder(), new String(), new ReturnPurchaseOrderForm(), new Integer(WIDTH));
                    dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                        @Override
                        public void windowClosing(java.awt.event.WindowEvent e) {
                            System.exit(0);
                        }
                    });
                    dialog.setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(PurchaseReturnForm.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JComboBox itemCombo;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField qtyText;
    // End of variables declaration//GEN-END:variables

    private void fillItemCombo() throws SQLException, ClassNotFoundException {
        List<Book_Item> itemBookList = BookController.getAllItems();
        List<Item> itemList = ItemController.getAllItemsNotBooks();
        b = false;
        itemCombo.removeAllItems();
        for (Book_Item bookList : itemBookList) {
            itemCombo.addItem(bookList);
        }
        for (Item item : itemList) {
            itemCombo.addItem(item);
        }
        b = true;
    }
}
