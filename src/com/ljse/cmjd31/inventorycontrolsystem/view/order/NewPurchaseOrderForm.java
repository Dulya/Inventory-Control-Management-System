/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.ljse.cmjd31.inventorycontrolsystem.view.order;

import com.ijse.cmjd31.inventorycontrolsystem.controller.ItemController;
import com.ijse.cmjd31.inventorycontrolsystem.controller.PurchaseOrderController;
import com.ijse.cmjd31.inventorycontrolsystem.controller.SupplierController;
import com.ijse.cmjd31.inventorycontrolsystem.model.Item;
import com.ijse.cmjd31.inventorycontrolsystem.model.PurchaseOrder;
import com.ijse.cmjd31.inventorycontrolsystem.model.PurchaseOrderDetail;
import com.ijse.cmjd31.inventorycontrolsystem.model.Supplier;
import com.ijse.cmjd31.inventorycontrolsystem.other.IdGenerator;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author 1
 */
public class NewPurchaseOrderForm extends javax.swing.JPanel {

    /**
     * Creates new form NewOrder
     */
    private boolean b;
    private DefaultTableModel dtm;
    private int cell;
    private DefaultTableModel dtm1;
    int value;

    public NewPurchaseOrderForm() {
        initComponents();
        try {
            fillSupplierCombo();
            supplierCombo.requestFocus();
            SimpleDateFormat sdf = new SimpleDateFormat("YYYY-MM-dd");
            String date = (String) sdf.format(new Date());
            dateText.setText(date);
            String nextId = IdGenerator.getNextId("PurchaseOrder", "idPurchaseorder", "PO");
            orderText.setText(nextId);
//            removeButton.getInputMap().put(KeyStroke.getKeyStroke("DELETE"),"pressed");
//              removeButton. getActionMap().put("pressed",new AbstractAction() {
//                   @Override
//                public void actionPerformed(ActionEvent e) {
//                    removeButton.doClick();
//                }
//            });
            processButton.setMnemonic(KeyEvent.VK_F1);
            removeButton.setMnemonic(KeyEvent.VK_DELETE);
        } catch (SQLException ex) {
            Logger.getLogger(NewPurchaseOrderForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(NewPurchaseOrderForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        costText = new javax.swing.JTextField();
        descriptionText = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        reOrderText = new javax.swing.JTextField();
        qtyText = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        salesText = new javax.swing.JTextField();
        removeButton = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        totAmountText = new javax.swing.JTextField();
        jPanel8 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        timeText = new javax.swing.JTextField();
        dateText = new javax.swing.JTextField();
        orderText = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        itemTable = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        itemDetailTable = new javax.swing.JTable();
        processButton = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        supplierCombo = new javax.swing.JComboBox();
        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setPreferredSize(new java.awt.Dimension(1200, 800));

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Item Detail", 0, 0, new java.awt.Font("Baskerville Old Face", 1, 18))); // NOI18N

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel13.setText("Qty On Hand");

        costText.setEditable(false);
        costText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                costTextActionPerformed(evt);
            }
        });

        descriptionText.setEditable(false);
        descriptionText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                descriptionTextActionPerformed(evt);
            }
        });
        descriptionText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                descriptionTextKeyReleased(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel14.setText("ReOrder Qty");

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel11.setText("Cost Price");

        reOrderText.setEnabled(false);
        reOrderText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reOrderTextActionPerformed(evt);
            }
        });
        reOrderText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                reOrderTextKeyReleased(evt);
            }
        });

        qtyText.setEditable(false);
        qtyText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                qtyTextActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setText("Description");

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel12.setText("Sales Price");

        salesText.setEditable(false);
        salesText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salesTextActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(descriptionText, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(371, Short.MAX_VALUE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(qtyText)
                            .addComponent(costText))
                        .addGap(77, 77, 77)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(salesText, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(reOrderText, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(40, 40, 40))))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(descriptionText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(costText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(salesText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel13)
                        .addComponent(qtyText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(reOrderText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        removeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/edit-delete-2.png"))); // NOI18N
        removeButton.setText("Remove");
        removeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeButtonActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Baskerville Old Face", 1, 24)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(0, 0, 102));
        jLabel15.setText("Total Amount");

        totAmountText.setEditable(false);
        totAmountText.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        totAmountText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totAmountTextActionPerformed(evt);
            }
        });

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));
        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel16.setText("Purchase Order Id");

        timeText.setEditable(false);
        timeText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timeTextActionPerformed(evt);
            }
        });

        dateText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateTextActionPerformed(evt);
            }
        });

        orderText.setEditable(false);
        orderText.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        orderText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderTextActionPerformed(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel18.setText("Time");

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel17.setText("Date");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(orderText, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(122, 122, 122)
                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(dateText, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(105, 105, 105)
                .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(timeText, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(39, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(orderText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17)
                    .addComponent(dateText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18)
                    .addComponent(timeText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Select Item From List", 0, 0, new java.awt.Font("Baskerville Old Face", 1, 18))); // NOI18N

        itemTable.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        itemTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item List"
            }
        ));
        itemTable.setSelectionBackground(new java.awt.Color(204, 204, 255));
        itemTable.setSelectionForeground(new java.awt.Color(0, 0, 0));
        itemTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                itemTableMousePressed(evt);
            }
        });
        itemTable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                itemTableKeyReleased(evt);
            }
        });
        jScrollPane3.setViewportView(itemTable);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        itemDetailTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Purchase Order Id", "ItemCode", "description", "cost Price", "sales Price", "Qty", "Amount"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        itemDetailTable.setSelectionBackground(new java.awt.Color(204, 204, 255));
        itemDetailTable.setSelectionForeground(new java.awt.Color(0, 0, 0));
        itemDetailTable.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                itemDetailTableFocusGained(evt);
            }
        });
        jScrollPane1.setViewportView(itemDetailTable);

        processButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/run-build-2.png"))); // NOI18N
        processButton.setText("Process");
        processButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processButtonActionPerformed(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Select Supplier", 0, 0, new java.awt.Font("Baskerville Old Face", 1, 18))); // NOI18N

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Supplier Box");

        supplierCombo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        supplierCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        supplierCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supplierComboActionPerformed(evt);
            }
        });
        supplierCombo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                supplierComboKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                supplierComboKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(supplierCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel8)
                .addGap(18, 18, 18)
                .addComponent(supplierCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(51, Short.MAX_VALUE))
        );

        jPanel1.setBackground(new java.awt.Color(0, 51, 102));

        jLabel5.setFont(new java.awt.Font("Baskerville Old Face", 1, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("New PurchaseOrder Form");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 1054, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(244, 244, 244)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(41, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(236, 236, 236)
                                .addComponent(totAmountText, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(processButton, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(107, 107, 107))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1)
                        .addGap(18, 18, 18)
                        .addComponent(removeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(25, 25, 25))
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(removeButton)
                        .addGap(77, 77, 77)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(processButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(totAmountText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15))))
                .addGap(50, 50, 50))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 1165, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 607, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void costTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_costTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_costTextActionPerformed

    private void descriptionTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_descriptionTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_descriptionTextActionPerformed

    private void descriptionTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_descriptionTextKeyReleased
    }//GEN-LAST:event_descriptionTextKeyReleased

    private void reOrderTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reOrderTextActionPerformed
        // addButton.requestFocus();
        //addButton.doClick();
        if (b) {
            if (reOrderText.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Please insert Item Qty !");
            } else {
                boolean isExist = false;
                dtm1 = (DefaultTableModel) itemDetailTable.getModel();
                int row = itemTable.getSelectedRow();
                Item item = (Item) itemTable.getValueAt(row, 0);
                cell = -1;
                int exitQty = 0;
                for (int i = 0; i < itemDetailTable.getRowCount(); i++) {
                    if (itemDetailTable.getValueAt(i, 1).equals(item.getItemCode())) {
                        isExist = true;
                        cell = i;
                        exitQty = (Integer) itemDetailTable.getValueAt(i, 5);
                        break;
                    }
                }
                if (!isExist) {
                    double price = Double.parseDouble(salesText.getText());
                    int qty = Integer.parseInt(reOrderText.getText());
                    double amount = (qty * price);
                    Object[] rowTable = {orderText.getText(), item.getItemCode(), item.getDescription(), item.getCostPrice(), item.getSalesPrice(), qty, amount};
                    dtm1.addRow(rowTable);
                    itemTable.requestFocus();
                    descriptionText.setText("");
                    costText.setText("");
                    salesText.setText("");
                    qtyText.setText("");
                    itemDetailTable.requestFocus();
                    int count1 = itemDetailTable.getRowCount();
                    double totalAmount = 0;
                    for (int i = 0; i < count1; i++) {
                        double rowAmount = (double) itemDetailTable.getValueAt(i, 6);
                        totalAmount = totalAmount + rowAmount;
                        totAmountText.setText(Double.toString(totalAmount));
                    }
                } else {
                    UpdateForm form = new UpdateForm(null, b, this);
                    form.setVisible(true);
                    form.setLocationRelativeTo(null);
                    if (value == 1) {
                        int newQty = Integer.parseInt(reOrderText.getText());
                        int newValue = newQty + exitQty;
                        itemDetailTable.setValueAt(newValue, cell, 5);
                        itemDetailTable.requestFocus();
                        descriptionText.setText("");
                        costText.setText("");
                        salesText.setText("");
                        qtyText.setText("");
                        //itemCombo.requestFocus();
                    } else if (value == 2) {
                        itemDetailTable.setValueAt(exitQty, cell, 5);
                        itemDetailTable.requestFocus();
                        descriptionText.setText("");
                        costText.setText("");
                        salesText.setText("");
                        qtyText.setText("");
                    } else if (value == 3) {
                        int newQty = Integer.parseInt(reOrderText.getText());
                        itemDetailTable.setValueAt(newQty, cell, 5);
                        itemDetailTable.requestFocus();
                        descriptionText.setText("");
                        costText.setText("");
                        salesText.setText("");
                        qtyText.setText("");
                    }
                }
            }
        }
    }//GEN-LAST:event_reOrderTextActionPerformed

    private void reOrderTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_reOrderTextKeyReleased
//        String text = qtyText.getText();
//        int r = Integer.parseInt(text);
//        String qty = reOrderText.getText();
//
//        if (!qty.isEmpty()) {
//
//            boolean res = qty.matches("[0-9]+");
//            if (res) {
//                int q = Integer.parseInt(reOrderText.getText());
//
//                if (r >= q) {
//                    reOrderText.setText(qty);
//                } else {
//                    qty = qty.substring(0, qty.length() - 1);
//                    reOrderText.setText(qty);
//                }
//
//            } else {
//                qty = qty.substring(0, qty.length() - 1);
//                reOrderText.setText(qty);
//
//            }
        // }
        String text = reOrderText.getText();
        if (!text.isEmpty()) {
            boolean res = text.matches("[0-9]+");
            if (res) {
                int q = Integer.parseInt(reOrderText.getText());
                if (q != 0) {
                    reOrderText.setText(text);
                } else {
                    text = text.substring(0, text.length() - 1);
                    reOrderText.setText(text);
                }
            } else {
                text = text.substring(0, text.length() - 1);
                reOrderText.setText(text);
            }
        }
    }//GEN-LAST:event_reOrderTextKeyReleased

    private void qtyTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_qtyTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_qtyTextActionPerformed

    private void salesTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salesTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_salesTextActionPerformed

    private void removeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeButtonActionPerformed
        dtm1 = (DefaultTableModel) itemDetailTable.getModel();
        int count = dtm1.getRowCount();
        if (count > 0) {
            int selectedRow = itemDetailTable.getSelectedRow();
            if (itemDetailTable.isRowSelected(selectedRow)) {
                int response = JOptionPane.showConfirmDialog(null, "Are you sure you want to remove row?", "Confirm", JOptionPane.YES_NO_OPTION);
                dtm1.removeRow(selectedRow);
            } else {
                JOptionPane.showMessageDialog(null, "Please select a row to remove !");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Item Table is Empty! please add Items to remove..");
        }
    }//GEN-LAST:event_removeButtonActionPerformed

    private void totAmountTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totAmountTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_totAmountTextActionPerformed

    private void timeTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timeTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_timeTextActionPerformed

    private void dateTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dateTextActionPerformed

    private void orderTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_orderTextActionPerformed

    private void itemTableKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_itemTableKeyReleased
        reOrderText.setEnabled(true);
        if (evt.getKeyCode() == KeyEvent.VK_SPACE) {
            int row = itemTable.getSelectedRow();
            // row = row != 0 ? --row : itemTable.getRowCount() - 1;
            Item item = (Item) itemTable.getValueAt(row, 0);
            descriptionText.setText(item.getDescription());
            costText.setText(Double.toString(item.getCostPrice()));
            salesText.setText(Double.toString(item.getSalesPrice()));
            qtyText.setText(Integer.toString(item.getQtyOnHand()));
            reOrderText.requestFocus();
        }
    }//GEN-LAST:event_itemTableKeyReleased

    private void processButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processButtonActionPerformed
        dtm1 = (DefaultTableModel) itemDetailTable.getModel();
        int count = dtm1.getRowCount();
        if (count > 0) {
            SimpleDateFormat sdf1 = new SimpleDateFormat("HH:mm:ss");
            String time = (String) sdf1.format(new Date());
            timeText.setText(time);
            int row = itemDetailTable.getRowCount();
            if (row > 0) {
                List<PurchaseOrderDetail> orderDetail = new ArrayList<>();
                for (int i = 0; i < row; i++) {
                    String id = (String) itemDetailTable.getValueAt(i, 0);
                    String itemCode = (String) itemDetailTable.getValueAt(i, 1);
                    String description = (String) itemDetailTable.getValueAt(i, 2);
                    double costPrice = (double) itemDetailTable.getValueAt(i, 3);
                    Supplier supplier = (Supplier) supplierCombo.getSelectedItem();
                    int qty = (Integer) itemDetailTable.getValueAt(i, 5);
                    double amount = (double) itemDetailTable.getValueAt(i, 6);
                    PurchaseOrderDetail detail = new PurchaseOrderDetail(id, itemCode, qty, costPrice, supplier.getSupplierId(), amount, description);
                    orderDetail.add(detail);
                }
                Supplier supplier = (Supplier) supplierCombo.getSelectedItem();
                PurchaseOrder purchaseOrder = new PurchaseOrder(orderText.getText(), supplier.getSupplierId(), dateText.getText(), timeText.getText(), Double.parseDouble(totAmountText.getText()), Double.parseDouble(totAmountText.getText()), orderDetail);
                int res;
                try {
                    res = PurchaseOrderController.addPurchaseOrder(purchaseOrder);
                    if (res > 0) {
                        JOptionPane.showMessageDialog(null, "Purchase Order added Successfully!");
                         dtm = (DefaultTableModel) itemTable.getModel();
        dtm.setRowCount(0);
        dtm1 = (DefaultTableModel) itemDetailTable.getModel();
        dtm1.setRowCount(0);
        descriptionText.setText("");
        costText.setText("");
        salesText.setText("");
        reOrderText.setText("");
        totAmountText.setText("");
        qtyText.setText("");
        timeText.setText("");
        supplierCombo.requestFocus();
        String nextId;
        try {
            nextId = IdGenerator.getNextId("PurchaseOrder", "idPurchaseorder", "PO");
            orderText.setText(nextId);
        } catch (SQLException ex) {
            Logger.getLogger(NewPurchaseOrderForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(NewPurchaseOrderForm.class.getName()).log(Level.SEVERE, null, ex);
        }
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(NewPurchaseOrderForm.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(NewPurchaseOrderForm.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please add Items to proceed with Purchase Order !");

        }
    }//GEN-LAST:event_processButtonActionPerformed

    private void supplierComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supplierComboActionPerformed

        if (b) {
            Supplier supplier = (Supplier) supplierCombo.getSelectedItem();
            List<Item> itemList;
            try {
                itemList = ItemController.getItemBySupplierCode(supplier.getSupplierId());
                dtm = (DefaultTableModel) itemTable.getModel();
                dtm.setRowCount(0);
                for (Item item : itemList) {
                    Object[] row = {item};
                    dtm.addRow(row);
                }
            } catch (SQLException ex) {
                Logger.getLogger(NewPurchaseOrderForm.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(NewPurchaseOrderForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_supplierComboActionPerformed

    private void supplierComboKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_supplierComboKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            itemTable.requestFocus();
        } else {
            supplierCombo.showPopup();
        }
    }//GEN-LAST:event_supplierComboKeyPressed

    private void supplierComboKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_supplierComboKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_supplierComboKeyReleased

    private void itemTableMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_itemTableMousePressed
        reOrderText.setEnabled(true);
        int row = itemTable.getSelectedRow();
        // row = row != 0 ? --row : itemTable.getRowCount() - 1;
        Item item = (Item) itemTable.getValueAt(row, 0);
        descriptionText.setText(item.getDescription());
        costText.setText(Double.toString(item.getCostPrice()));
        salesText.setText(Double.toString(item.getSalesPrice()));
        qtyText.setText(Integer.toString(item.getQtyOnHand()));
        reOrderText.requestFocus();
    }//GEN-LAST:event_itemTableMousePressed

    private void itemDetailTableFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_itemDetailTableFocusGained
        reOrderText.setText("");
        reOrderText.setEnabled(false);
    }//GEN-LAST:event_itemDetailTableFocusGained
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField costText;
    private javax.swing.JTextField dateText;
    private javax.swing.JTextField descriptionText;
    private javax.swing.JTable itemDetailTable;
    private javax.swing.JTable itemTable;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField orderText;
    private javax.swing.JButton processButton;
    private javax.swing.JTextField qtyText;
    private javax.swing.JTextField reOrderText;
    private javax.swing.JButton removeButton;
    private javax.swing.JTextField salesText;
    private javax.swing.JComboBox supplierCombo;
    private javax.swing.JTextField timeText;
    private javax.swing.JTextField totAmountText;
    // End of variables declaration//GEN-END:variables

    private void fillSupplierCombo() throws SQLException, ClassNotFoundException {
        List<Supplier> supplerList = SupplierController.getAllSuppliers();
        b = false;
        supplierCombo.removeAllItems();
        for (Supplier supplier : supplerList) {
            supplierCombo.addItem(supplier);
        }
        b = true;
    }
//    private void check() {
//        boolean bool=descriptionText.getText().isEmpty() || salesText.getText().isEmpty() || qtyText.getText().isEmpty();
//        if(bool==false){
//           reOrderText.setEnabled(true);
//        }else{
//           reOrderText.setEnabled(false); 
//        }
//    }

    public void itemUpdate(int value) {
        this.value = value;
    }
}
